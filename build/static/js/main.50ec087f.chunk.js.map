{"version":3,"sources":["redux/types.js","redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/actions/dataActions.js","redux/actions/userActions.js","util/theme.js","util/MyButton.jsx","components/scream/LikeButton.jsx","components/scream/Comments.jsx","components/scream/CommentForm.jsx","components/scream/ScreamDialog.jsx","components/scream/DeleteScream.jsx","components/scream/Scream.jsx","components/profile/EditDetails.jsx","images/no-image.png","util/ProfileSkeleton.jsx","components/profile/Profile.jsx","util/ScreamSkeleton.jsx","pages/home.js","components/profile/StaticProfile.jsx","pages/user.js","images/icon.png","pages/login.js","pages/signup.js","components/scream/PostScream.jsx","components/layout/Notifications.jsx","components/layout/Navbar.jsx","util/AuthRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["SET_AUTHENTICATED","SET_UNAUTHENTICATED","SET_USER","LOADING_USER","MARK_NOTIFICATIONS_READ","SET_ERRORS","LOADING_UI","CLEAR_ERRORS","LOADING_DATA","STOP_LOADING_UI","SET_SCREAMS","SET_SCREAM","LIKE_SCREAM","UNLIKE_SCREAM","DELETE_SCREAM","POST_SCREAM","SUBMIT_COMMENT","initialState","authenticated","loading","credentials","likes","notifications","userReducer","state","action","type","payload","userHandle","handle","screamId","filter","like","forEach","note","read","screams","scream","dataReducer","index","findIndex","deleteIndex","splice","commentCount","comments","errors","uiReducer","middleware","thunk","reducers","combineReducers","user","data","UI","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","getScreams","dispatch","axios","get","then","res","catch","err","clearErrors","getUserData","console","log","setAuthorizationHeader","token","FBIdToken","localStorage","setItem","defaults","headers","common","logoutUser","removeItem","theme","palette","primary","light","main","dark","contrastText","secondary","spreadThis","typography","useNextVarients","form","textAlign","image","margin","height","width","pageTitle","textField","button","marginTop","marginBottom","position","customError","color","fontSize","progress","paper","padding","profile","top","left","objectFit","maxWidth","borderRadius","verticalAlign","border","cursor","buttons","invisibleSeparator","visibleSeparator","borderBottom","MyButton","children","onClick","btnClassName","tipClassName","tip","Tooltip","title","className","placement","IconButton","LikeButton","likedScream","props","find","likeScream","unlikeScream","this","to","Component","mapActionsToProps","error","connect","Comments","classes","Grid","container","map","comment","body","createdAt","userImage","item","sm","src","alt","commentImage","commentData","Typography","variant","component","Link","dayjs","format","length","withStyles","marginLeft","CommentForm","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","submitComment","nextProps","style","onSubmit","TextField","label","helperText","onChange","fullWidth","Button","post","response","ScreamDialog","open","oldPath","newPath","getScreamData","handleOpen","location","pathname","history","pushState","getScream","handleClose","openDialog","likeCount","dialogMarkup","spinnerDiv","size","thickness","spacing","profileImage","expandButton","Dialog","onClose","closeButton","DialogContent","hieght","DeleteScream","deleteScream","deleteButton","DialogTitle","DialogActions","delete","Scream","extend","relativeTime","Card","card","CardHeader","avatar","Avatar","subheader","fromNow","CardContent","content","CardActions","disableSpacing","EditDetails","bio","website","mapUserDetailsToState","userDetails","editUserDetails","multiline","rows","placeholder","float","backgroundColor","fullLine","halfLine","Paper","NoImg","Profile","handleImageChange","files","formData","FormData","append","uploadImage","handleEditPicture","document","getElementById","click","handleLogout","imageUrl","elevation","id","hidden","href","rel","align","display","flexDirection","cover","minWidth","date","Array","from","CardMedia","home","recentScreamsMarkup","xs","screamIdParam","match","params","screamsMarkup","login","userData","email","password","loginUser","AppIcon","noValidate","general","CircularProgress","push","newUserData","confirmPassword","signupUser","PostScream","postScream","submitButton","disabled","progressSpinner","newScream","Notifications","anchorEl","onMenuOpened","unreadNotificationsIds","notificationId","markNotificationsRead","notificationIcon","Badge","badgeContent","notificationsMarkup","verb","time","iconColor","icon","marginRight","MenuItem","recipient","sender","aria-owns","undefined","aria-haspopup","Menu","Boolean","onEntered","notificationIds","Navbar","AppBar","Toolbar","rest","render","baseURL","createMuiTheme","themeFile","jwtDecode","exp","Date","now","App","exact","path","signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.50ec087f.chunk.js","sourcesContent":["// user reducer types\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED'\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED'\nexport const SET_USER = 'SET_USER'\nexport const LOADING_USER = 'LOADING_USER'\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ'\n\n//UI reducer types\nexport const SET_ERRORS = 'SET_ERRORS'\nexport const LOADING_UI = 'LOADING_UI'\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\nexport const LOADING_DATA = 'LOADING_DATA'\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI'\n\n//Data reducer types\nexport const SET_SCREAMS = 'SET_SCREAMS'\nexport const SET_SCREAM = 'SET_SCREAM'\nexport const LIKE_SCREAM = 'LIKE_SCREAM'\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM'\nexport const DELETE_SCREAM = 'DELETE_SCREAM'\nexport const POST_SCREAM = 'POST_SCREAM'\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT'\n","import {\n  SET_USER,\n  //   SET_ERRORS,\n  //   CLEAR_ERRORS,\n  //   LOADING_UI,\n  LIKE_SCREAM,\n  LOADING_USER,\n  SET_AUTHENTICATED,\n  SET_UNAUTHENTICATED,\n  UNLIKE_SCREAM,\n  MARK_NOTIFICATIONS_READ,\n} from '../types'\n\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  likes: [],\n  notifications: [],\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: true,\n      }\n    case SET_UNAUTHENTICATED:\n      return initialState\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        ...action.payload,\n      }\n    case LOADING_USER:\n      return {\n        ...state,\n        loading: true,\n      }\n    case LIKE_SCREAM:\n      return {\n        ...state,\n        likes: [\n          ...state.likes,\n          {\n            userHandle: state.credentials.handle,\n            screamId: action.payload.screamId,\n          },\n        ],\n      }\n    case UNLIKE_SCREAM:\n      return {\n        ...state,\n        likes: state.likes.filter(\n          like => like.screamId !== action.payload.screamId\n        ),\n      }\n    case MARK_NOTIFICATIONS_READ:\n      state.notifications.forEach(note => (note.read = true))\n      return {\n        ...state,\n      }\n    default:\n      return state\n  }\n}\n\nexport default userReducer\n","import {\n  SET_SCREAMS,\n  SET_SCREAM,\n  LIKE_SCREAM,\n  UNLIKE_SCREAM,\n  LOADING_DATA,\n  DELETE_SCREAM,\n  POST_SCREAM,\n  SUBMIT_COMMENT,\n} from '../types'\n\nconst initialState = {\n  screams: [],\n  scream: {},\n  loading: false,\n}\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOADING_DATA:\n      return {\n        ...state,\n        loading: true,\n      }\n    case SET_SCREAMS:\n      return {\n        ...state,\n        screams: action.payload,\n        loading: false,\n      }\n    case SET_SCREAM: {\n      return {\n        ...state,\n        scream: action.payload,\n      }\n    }\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      let index = state.screams.findIndex(\n        scream => scream.screamId === action.payload.screamId\n      )\n      state.screams[index] = action.payload\n      if (state.scream.screamId === action.payload.screamId) {\n        state.scream = { ...state.scream, ...action.payload }\n      }\n      return {\n        ...state,\n      }\n    case DELETE_SCREAM:\n      let deleteIndex = state.screams.findIndex(\n        scream => scream.screamId === action.payload\n      )\n      state.screams.splice(deleteIndex, 1)\n      return {\n        ...state,\n      }\n    case POST_SCREAM:\n      return {\n        ...state,\n        screams: [action.payload, ...state.screams],\n      }\n    case SUBMIT_COMMENT: {\n      return {\n        ...state,\n        scream: {\n          ...state.scream,\n          commentCount: state.scream.commentCount + 1,\n          comments: [action.payload, ...state.scream.comments],\n        },\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport default dataReducer\n","import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI } from '../types'\n\nconst initialState = {\n  loading: false,\n  errors: null,\n}\n\nconst uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ERRORS:\n      return {\n        ...state,\n        loading: false,\n        errors: action.payload,\n      }\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        loading: false,\n        errors: null,\n      }\n    case LOADING_UI:\n      return {\n        ...state,\n        loading: true,\n      }\n    case STOP_LOADING_UI:\n      return {\n        ...state,\n        loading: false,\n      }\n    default:\n      return state\n  }\n}\n\nexport default uiReducer\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\n\nimport thunk from 'redux-thunk'\n\nimport userReducer from './reducers/userReducer'\nimport dataReducer from './reducers/dataReducer'\nimport uiReducer from './reducers/uiReducer'\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst reducers = combineReducers({\n  user: userReducer,\n  data: dataReducer,\n  UI: uiReducer,\n})\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose\n\nconst enhancer = composeEnhancers(applyMiddleware(...middleware))\nconst store = createStore(reducers, initialState, enhancer)\n\nexport default store\n","import {\n  SET_SCREAMS,\n  SET_SCREAM,\n  LOADING_DATA,\n  LIKE_SCREAM,\n  UNLIKE_SCREAM,\n  SET_ERRORS,\n  DELETE_SCREAM,\n  CLEAR_ERRORS,\n  POST_SCREAM,\n  LOADING_UI,\n  STOP_LOADING_UI,\n  SUBMIT_COMMENT,\n} from '../types'\n\nimport axios from 'axios'\n\n//get all screams\nexport const getScreams = () => dispatch => {\n  dispatch({ type: LOADING_DATA })\n  axios\n    .get('/screams')\n    .then(res => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data,\n      })\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: [],\n      })\n    })\n}\n\n//post a new scream\nexport const postScream = newScream => dispatch => {\n  dispatch({ type: LOADING_UI })\n  axios\n    .post('/scream', newScream)\n    .then(res => {\n      dispatch({\n        type: POST_SCREAM,\n        payload: res.data,\n      })\n      dispatch(clearErrors())\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      })\n    })\n}\n\n//like a scream\nexport const likeScream = screamId => dispatch => {\n  axios\n    .get(`/scream/${screamId}/like`)\n    .then(res => {\n      dispatch({\n        type: LIKE_SCREAM,\n        payload: res.data,\n      })\n    })\n    .catch(err => console.error(err))\n}\n\n//unlike a scream\nexport const unlikeScream = screamId => dispatch => {\n  axios\n    .get(`/scream/${screamId}/unlike`)\n    .then(res => {\n      dispatch({\n        type: UNLIKE_SCREAM,\n        payload: res.data,\n      })\n    })\n    .catch(err => console.error(err))\n}\n\n//delete scream\nexport const deleteScream = screamId => dispatch => {\n  axios\n    .delete(`/scream/${screamId}`)\n    .then(() => {\n      dispatch({\n        type: DELETE_SCREAM,\n        payload: screamId,\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const clearErrors = () => dispatch => {\n  dispatch({ type: CLEAR_ERRORS })\n}\n\nexport const getScream = screamId => dispatch => {\n  dispatch({ type: LOADING_UI })\n  console.log(screamId)\n  axios\n    .get(`/scream/${screamId}`)\n    .then(res => {\n      console.log(res.data)\n      dispatch({\n        type: SET_SCREAM,\n        payload: res.data,\n      })\n      dispatch({ type: STOP_LOADING_UI })\n    })\n    .catch(err => console.error(err))\n}\n\nexport const submitComment = (screamId, commentData) => dispatch => {\n  axios\n    .post(`/scream/${screamId}/comment`, commentData)\n    .then(res => {\n      dispatch({\n        type: SUBMIT_COMMENT,\n        payload: res.data,\n      })\n      axios\n        .get('/screams')\n        .then(res => {\n          dispatch({\n            type: SET_SCREAMS,\n            payload: res.data,\n          })\n          dispatch(clearErrors())\n        })\n        .catch(err => {\n          dispatch({\n            type: SET_SCREAMS,\n            payload: [],\n          })\n        })\n      //dispatch(getScreams())\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      })\n    })\n}\n\nexport const getUserData = userHandle => dispatch => {\n  dispatch({ type: LOADING_DATA })\n  axios\n    .get(`/user/${userHandle}`)\n    .then(res => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data.screams,\n      })\n    })\n    .catch(() => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: null,\n      })\n    })\n}\n","import {\n  SET_USER,\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  LOADING_USER,\n  SET_UNAUTHENTICATED,\n  MARK_NOTIFICATIONS_READ,\n} from '../types'\nimport axios from 'axios'\nimport { getScreams } from './dataActions'\n\n// login user\nexport const loginUser = (userData, history) => dispatch => {\n  dispatch({ type: LOADING_UI })\n  axios\n    .post('/login', userData)\n    .then(res => {\n      setAuthorizationHeader(res.data.token)\n      dispatch(getUserData())\n      dispatch({ type: CLEAR_ERRORS })\n      history.push('/')\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      })\n    })\n}\n\nexport const getUserData = () => dispatch => {\n  dispatch({ type: LOADING_USER })\n  axios\n    .get('/user')\n    .then(res => {\n      dispatch({\n        type: SET_USER,\n        payload: res.data,\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nconst setAuthorizationHeader = token => {\n  const FBIdToken = `Bearer ${token}`\n  localStorage.setItem('FBIdToken', FBIdToken)\n  axios.defaults.headers.common['Authorization'] = FBIdToken\n}\n\n//signup user\nexport const signupUser = (newUserData, history) => dispatch => {\n  dispatch({ type: LOADING_UI })\n  axios\n    .post('/signup', newUserData)\n    .then(res => {\n      setAuthorizationHeader(res.data.token)\n      dispatch(getUserData())\n      dispatch({ type: CLEAR_ERRORS })\n      history.push('/')\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      })\n    })\n}\n\n// logout\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('FBIdToken')\n  delete axios.defaults.headers.common['Authorization']\n  dispatch({ type: SET_UNAUTHENTICATED })\n}\n\n// upload image\nexport const uploadImage = formData => dispatch => {\n  dispatch({ type: LOADING_USER })\n  axios\n    .post(`/user/image`, formData)\n    .then(() => {\n      dispatch(getUserData())\n    })\n    .then(() => {\n      dispatch(getScreams())\n    })\n    .catch(err => console.log(err))\n}\n\n//update user profile\nexport const editUserDetails = userDetails => dispatch => {\n  dispatch({ type: LOADING_USER })\n  axios\n    .post(`/user`, userDetails)\n    .then(() => {\n      dispatch(getUserData())\n    })\n    .catch(err => console.log(err))\n}\n\nexport const markNotificationsRead = notificationIds => dispatch => {\n  axios\n    .post('/notifications', notificationIds)\n    .then(res => {\n      dispatch({\n        type: MARK_NOTIFICATIONS_READ,\n      })\n    })\n    .catch(err => console.log(err))\n}\n","const theme = {\n  palette: {\n    primary: {\n      light: '#33c9dc',\n      main: '#00bcd4',\n      dark: '#008394',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff6333',\n      main: '#ff3d00',\n      dark: '#b22a00',\n      contrastText: '#fff',\n    },\n  },\n  spreadThis: {\n    typography: {\n      useNextVarients: true,\n    },\n    form: {\n      textAlign: 'center',\n    },\n    image: {\n      margin: '20px auto 20px auto',\n      height: '40px',\n      width: '40px',\n    },\n    pageTitle: {\n      margin: '10px auto 10px auto',\n    },\n    textField: {\n      margin: '10px auto 10px auto',\n    },\n    button: {\n      marginTop: 20,\n      marginBottom: 20,\n      height: 46,\n      width: 78,\n      position: 'relative',\n    },\n    customError: {\n      color: 'red',\n      fontSize: '0.8rem',\n      marginTop: '10',\n    },\n    progress: {\n      position: 'absolute',\n      color: 'white',\n    },\n    paper: {\n      padding: '10px 10px 0px 10px',\n    },\n    profile: {\n      '& .image-wrapper': {\n        textAlign: 'center',\n        position: 'relative',\n        '& button': {\n          position: 'absolute',\n          top: '80%',\n          left: '70%',\n        },\n      },\n      '& .profile-image': {\n        width: 200,\n        height: 200,\n        objectFit: 'cover',\n        maxWidth: '100%',\n        borderRadius: '50%',\n      },\n      '& .profile-details': {\n        textAlign: 'center',\n        '& span, svg': {\n          verticalAlign: 'middle',\n        },\n        '& a': {\n          color: '#00bcd4',\n        },\n      },\n      '& hr': {\n        border: 'none',\n        margin: '0 0 10px 0',\n      },\n      '& svg.button': {\n        '&:hover': {\n          cursor: 'pointer',\n        },\n      },\n    },\n    buttons: {\n      textAlign: 'center',\n      '& a': {\n        margin: '20px 10px',\n      },\n    },\n    invisibleSeparator: {\n      border: 'none',\n      margin: 4,\n    },\n    visibleSeparator: {\n      width: '100%',\n      borderBottom: '1px solid rgba(0,0,0,0.1)',\n      marginBottom: 20,\n    },\n  },\n}\n\nexport default theme\n","import React from 'react'\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\n\nexport default function MyButton({\n  children,\n  onClick,\n  btnClassName,\n  tipClassName,\n  tip,\n}) {\n  return (\n    <Tooltip title={tip} className={tipClassName} placement='top'>\n      <IconButton onClick={onClick} className={btnClassName}>\n        {children}\n      </IconButton>\n    </Tooltip>\n  )\n}\n","import React, { Component } from 'react'\nimport MyButton from '../../util/MyButton'\n\nimport { Link } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\n\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder'\n\nimport { connect } from 'react-redux'\n\nimport { likeScream, unlikeScream } from '../../redux/actions/dataActions'\n\nclass LikeButton extends Component {\n  likedScream = () => {\n    if (\n      this.props.user.likes &&\n      this.props.user.likes.find(like => like.screamId === this.props.screamId)\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  likeScream = () => {\n    this.props.likeScream(this.props.screamId)\n  }\n  unlikeScream = () => {\n    this.props.unlikeScream(this.props.screamId)\n  }\n\n  render() {\n    const { authenticated } = this.props.user\n    const likeButton = !authenticated ? (\n      <Link to='/login'>\n        <MyButton tip='Like'>\n          <FavoriteBorder color='primary' />\n        </MyButton>\n      </Link>\n    ) : this.likedScream() ? (\n      <MyButton tip='Undo Like' onClick={this.unlikeScream}>\n        <FavoriteIcon color='primary' />\n      </MyButton>\n    ) : (\n      <MyButton tip='Like' onClick={this.likeScream}>\n        <FavoriteBorder color='primary' />\n      </MyButton>\n    )\n\n    return likeButton\n  }\n}\n\nLikeButton.propTypes = {\n  likeScream: PropTypes.func.isRequired,\n  unlikeScream: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n})\n\nconst mapActionsToProps = {\n  likeScream,\n  unlikeScream,\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton)\n","import React, { Component, Fragment } from 'react'\nimport dayjs from 'dayjs'\n\nimport PropTypes from 'prop-types'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n  commentImage: {\n    maxWidth: '100%',\n    height: 100,\n    objectFit: 'cover',\n    borderRadius: '50%',\n  },\n  commentData: {\n    marginLeft: 20,\n  },\n})\n\nclass Comments extends Component {\n  render() {\n    const { comments, classes } = this.props\n    return (\n      <Grid container>\n        {comments.map((comment, index) => {\n          const { body, createdAt, userImage, userHandle } = comment\n          return (\n            <Fragment key={createdAt}>\n              <Grid item sm={12}>\n                <Grid container>\n                  <Grid item sm={2}>\n                    <img\n                      src={userImage}\n                      alt='comment'\n                      className={classes.commentImage}\n                    />\n                  </Grid>\n                  <Grid item sm={9}>\n                    <div className={classes.commentData}>\n                      <Typography\n                        variant='h5'\n                        component={Link}\n                        to={`/users/${userHandle}`}\n                        color='primary'\n                      >\n                        {userHandle}\n                      </Typography>\n\n                      <Typography variant='body2' color='textSecondary'>\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n                      </Typography>\n                      <hr className={classes.invisibleSeparator} />\n                      <Typography variant='body1'>{body}</Typography>\n                    </div>\n                  </Grid>\n                </Grid>\n              </Grid>\n              {index !== comments.length - 1 && (\n                <hr className={classes.visibleSeparator} />\n              )}\n            </Fragment>\n          )\n        })}\n      </Grid>\n    )\n  }\n}\n\nComments.propTypes = {\n  comments: PropTypes.array.isRequired,\n}\n\nexport default withStyles(styles)(Comments)\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\n\nimport { connect } from 'react-redux'\nimport { submitComment } from '../../redux/actions/dataActions'\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n})\n\nexport class CommentForm extends Component {\n  state = {\n    body: '',\n    errors: {},\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors })\n    }\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({ body: '' })\n    }\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.submitComment(this.props.screamId, { body: this.state.body })\n  }\n\n  render() {\n    const { classes, authenticated } = this.props\n\n    const errors = this.state.errors\n\n    const CommentFormMarkup = authenticated ? (\n      <Grid item sm={12} style={{ textAlign: 'center' }}>\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            name='body'\n            type='text'\n            label='Comment on Scream'\n            error={errors.comment ? true : false}\n            helperText={errors.comment}\n            value={this.state.body}\n            onChange={this.handleChange}\n            fullWidth\n            className={classes.textField}\n          />\n          <Button\n            type='submit'\n            variant='contained'\n            color='primary'\n            className={classes.button}\n          >\n            Submit\n          </Button>\n        </form>\n        <hr className={classes.visibleSeparator} />\n      </Grid>\n    ) : null\n\n    return CommentFormMarkup\n  }\n}\n\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated,\n})\n\nexport default connect(mapStateToProps, { submitComment })(\n  withStyles(styles)(CommentForm)\n)\n","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nimport dayjs from 'dayjs'\n\nimport { Link } from 'react-router-dom'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport CircularProgrss from '@material-ui/core/CircularProgress'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport ChatIcon from '@material-ui/icons/Chat'\n\nimport Close from '@material-ui/icons/Close'\nimport UnfoldMore from '@material-ui/icons/UnfoldMore'\n\nimport { connect } from 'react-redux'\nimport { getScream, clearErrors } from '../../redux/actions/dataActions'\n\nimport MyButton from '../../util/MyButton'\nimport LikeButton from './LikeButton'\nimport Comments from './Comments'\nimport CommentForm from './CommentForm'\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n\n  profileImage: {\n    maxWidth: 200,\n    hieght: 200,\n    borderRadius: '50%',\n    objectFit: 'cover',\n  },\n  DialogContent: {\n    padding: 20,\n  },\n  closeButton: {\n    position: 'absolute',\n    left: '90%',\n  },\n  expandButton: {\n    marginLeft: 'auto',\n  },\n  spinnerDiv: {\n    textAlign: 'center',\n    marginTop: 50,\n    marginBottom: 50,\n  },\n})\n\nclass ScreamDialog extends Component {\n  state = {\n    open: false,\n    oldPath: '',\n    newPath: '',\n    getScreamData: false,\n  }\n\n  componentDidMount() {\n    if (this.props.openDialog && !this.state.getScreamData) {\n      this.setState({ getScreamData: true })\n      this.handleOpen()\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.openDialog && !this.state.getScreamData) {\n      this.setState({ getScreamData: true })\n      this.handleOpen()\n    }\n  }\n\n  handleOpen = () => {\n    let oldPath = window.location.pathname\n\n    const { userHandle, screamId } = this.props\n    console.log(this.props.screamId)\n    const newPath = `/users/${userHandle}/scream/${screamId}`\n\n    if (oldPath === newPath) oldPath = `/users/${userHandle}`\n\n    window.history.pushState(null, null, newPath)\n\n    this.setState({ open: true, oldPath, newPath })\n    this.props.getScream(this.props.screamId)\n  }\n\n  handleClose = () => {\n    window.history.pushState(null, null, this.state.oldPath)\n    this.setState({ open: false })\n    this.props.clearErrors()\n  }\n\n  render() {\n    const {\n      classes,\n      scream: {\n        screamId,\n        body,\n        createdAt,\n        likeCount,\n        commentCount,\n        userImage,\n        userHandle,\n        comments,\n      },\n      UI: { loading },\n    } = this.props\n\n    const dialogMarkup = loading ? (\n      <div className={classes.spinnerDiv}>\n        <CircularProgrss size={200} thickness={2} />\n      </div>\n    ) : (\n      <Grid container spacing={6}>\n        <Grid item sm={5}>\n          <img src={userImage} alt='Profile' className={classes.profileImage} />\n        </Grid>\n        <Grid item sm={7}>\n          <Typography\n            component={Link}\n            variant='h5'\n            color='primary'\n            to={`/users/${userHandle}`}\n          >\n            @{userHandle}\n          </Typography>\n          <hr className={classes.invisibleSeparator} />\n          <Typography variant='body2' color='textSecondary'>\n            {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n          </Typography>\n          <hr className={classes.invisibleSeparator} />\n          <Typography variant='body1'>{body}</Typography>\n          <LikeButton screamId={screamId} />\n          <span>{likeCount} Likes</span>\n          <MyButton tip='Comments'>\n            <ChatIcon color='primary' />\n          </MyButton>\n          <span>{commentCount} Comments</span>\n        </Grid>\n        <hr className={classes.visibleSeparator} />\n        <CommentForm screamId={screamId} />\n        <Comments comments={comments} />\n      </Grid>\n    )\n\n    return (\n      <Fragment>\n        <MyButton\n          onClick={this.handleOpen}\n          tip='Expand Scream'\n          btnClassName={classes.expandButton}\n        >\n          <UnfoldMore color='primary' />\n        </MyButton>\n\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth='sm'\n        >\n          <MyButton\n            tip='Close'\n            onClick={this.handleClose}\n            btnClassName={classes.closeButton}\n          >\n            <Close />\n          </MyButton>\n          <DialogContent className={classes.DialogContent}>\n            {dialogMarkup}\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    )\n  }\n}\n\nScreamDialog.propTypes = {\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  scream: state.data.scream,\n  UI: state.UI,\n})\n\nconst mapActionsToProps = {\n  getScream,\n  clearErrors,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(ScreamDialog))\n","import React, { Component, Fragment } from 'react'\n\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nimport { connect } from 'react-redux'\n\nimport PropTypes from 'prop-types'\n\nimport Button from '@material-ui/core/Button'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\n\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DeleteIcon from '@material-ui/icons/DeleteOutline'\n\nimport MyButton from '../../util/MyButton'\n\nimport { deleteScream } from '../../redux/actions/dataActions'\n\nconst styles = {\n  deleteButton: {},\n}\n\nclass DeleteScream extends Component {\n  state = {\n    open: false,\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  deleteScream = () => {\n    this.props.deleteScream(this.props.screamId)\n    this.setState({ open: false })\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <Fragment>\n        <MyButton\n          tip='Delete Scream'\n          onClick={this.handleOpen}\n          btnClassName={classes.deleteButton}\n        >\n          <DeleteIcon color='secondary' />\n        </MyButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth='sm'\n        >\n          <DialogTitle>\n            Are you sure you want to delete this scream?\n          </DialogTitle>\n          <DialogActions>\n            <Button onClick={this.handleClose} color='primary'>\n              Cancel\n            </Button>\n            <Button onClick={this.deleteScream} color='secondary'>\n              Delete\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    )\n  }\n}\n\nDeleteScream.propTypes = {\n  deleteScream: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n}\n\nexport default connect(null, { deleteScream })(withStyles(styles)(DeleteScream))\n","import React, { Component } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nimport { connect } from 'react-redux'\n\nimport PropTypes from 'prop-types'\n\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\n\nimport { Link } from 'react-router-dom'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar'\n\nimport ChatIcon from '@material-ui/icons/Chat'\n\nimport MyButton from '../../util/MyButton'\nimport ScreamDialog from './ScreamDialog'\nimport DeleteScream from './DeleteScream'\nimport LikeButton from './LikeButton'\nimport { CardActions, CardHeader } from '@material-ui/core'\nimport MuiLink from '@material-ui/core/Link'\n\nconst styles = {\n  card: {\n    marginBottom: 20,\n  },\n  image: {},\n  content: {\n    padding: '0px 20px 0px 20px',\n    objectFit: 'cover',\n  },\n}\n\nexport class Scream extends Component {\n  render() {\n    dayjs.extend(relativeTime)\n    const {\n      classes,\n      scream: {\n        userImage,\n        body,\n        createdAt,\n        userHandle,\n        screamId,\n        likeCount,\n        commentCount,\n      },\n      user: {\n        authenticated,\n        credentials: { handle },\n      },\n    } = this.props\n\n    const deleteButton =\n      authenticated && userHandle === handle ? (\n        <DeleteScream screamId={screamId} />\n      ) : null\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader\n          avatar={\n            <Avatar\n              src={userImage}\n              alt='Profile Image'\n              className={classes.image}\n            />\n          }\n          action={deleteButton}\n          title={\n            <MuiLink\n              component={Link}\n              to={`/users/${userHandle}`}\n              color='primary'\n              variant='body1'\n            >\n              @{userHandle}\n            </MuiLink>\n          }\n          subheader={dayjs(createdAt).fromNow()}\n        />\n        <CardContent className={classes.content}>\n          <Typography variant='body1'>{body}</Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <LikeButton screamId={screamId} />\n          <span>{likeCount}</span>\n          <MyButton tip='Comments'>\n            <ChatIcon color='primary' />\n          </MyButton>\n          <span>{commentCount}</span>\n          <ScreamDialog\n            screamId={screamId}\n            userHandle={userHandle}\n            openDialog={this.props.openDialog}\n          />\n        </CardActions>\n      </Card>\n    )\n  }\n}\n\nScream.propTypes = {\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  openDialog: PropTypes.bool,\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(Scream))\n","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport EditIcon from '@material-ui/icons/Edit'\n\nimport MyButton from '../../util/MyButton'\n\nimport { editUserDetails } from '../../redux/actions/userActions'\n\nimport { connect } from 'react-redux'\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n  button: {\n    float: 'right',\n  },\n})\n\nclass EditDetails extends Component {\n  state = {\n    bio: '',\n    website: '',\n    location: '',\n    open: false,\n  }\n\n  mapUserDetailsToState = credentials => {\n    this.setState({\n      bio: credentials.bio ? credentials.bio : '',\n      website: credentials.website ? credentials.website : '',\n      location: credentials.location ? credentials.location : '',\n    })\n  }\n\n  componentDidMount() {\n    const { credentials } = this.props\n    this.mapUserDetailsToState(credentials)\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true })\n    this.mapUserDetailsToState(this.props.credentials)\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  handleSubmit = () => {\n    const userDetails = {\n      bio: this.state.bio,\n      website: this.state.website,\n      location: this.state.location,\n    }\n    this.props.editUserDetails(userDetails)\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <Fragment>\n        <MyButton\n          tip='Edit Details'\n          onClick={this.handleOpen}\n          btnClassName={classes.button}\n        >\n          <EditIcon color='primary' />\n        </MyButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth='sm'\n        >\n          <DialogTitle>Edit Your Details</DialogTitle>\n          <DialogContent>\n            <form>\n              <TextField\n                name='bio'\n                type='text'\n                label='Bio'\n                multiline\n                rows='3'\n                placeholder='A short bio about yourself'\n                className={classes.TextField}\n                value={this.state.bio}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <TextField\n                name='website'\n                type='text'\n                label='website'\n                placeholder='your personal website'\n                className={classes.TextField}\n                value={this.state.website}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <TextField\n                name='location'\n                type='text'\n                label='location'\n                placeholder='your location'\n                className={classes.TextField}\n                value={this.state.location}\n                onChange={this.handleChange}\n                fullWidth\n              />\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color='primary'>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color='secondary'>\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    )\n  }\n}\n\nEditDetails.propTypes = {\n  editUserDetails: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  credentials: state.user.credentials,\n})\n\nexport default connect(mapStateToProps, { editUserDetails })(\n  withStyles(styles)(EditDetails)\n)\n","export default __webpack_public_path__ + \"static/media/no-image.c3f94521.png\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nimport NoImg from '../images/no-image.png'\n\nimport Paper from '@material-ui/core/Paper'\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n  handle: {\n    height: 20,\n    backgroundColor: theme.palette.primary.main,\n    width: 60,\n    margin: '0px auto 7px auto',\n  },\n  fullLine: {\n    height: 15,\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    width: '100%',\n    marginBottom: 10,\n  },\n  halfLine: {\n    height: 15,\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    width: '50%',\n    marginBottom: 10,\n  },\n})\n\nconst ProfileSkeleton = props => {\n  const { classes } = props\n\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.profile}>\n        <div className='image-wrapper'>\n          <img src={NoImg} alt='profile' className='profile-image' />\n        </div>\n        <hr />\n        <div className='profile-details'>\n          <div className={classes.handle}></div>\n          <hr />\n          <div className={classes.fullLine}></div>\n          <div className={classes.fullLine}></div>\n          <div className={classes.fullLine}></div>\n          <div className={classes.fullLine}></div>\n          <div className={classes.fullLine}></div>\n          <div className={classes.fullLine}></div>\n          <hr />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n\nProfileSkeleton.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(ProfileSkeleton)\n","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport { Link } from 'react-router-dom'\nimport dayjs from 'dayjs'\nimport EditDetails from './EditDetails'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport MuiLink from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\n\nimport LocationOn from '@material-ui/icons/LocationOn'\nimport LinkIcon from '@material-ui/icons/Link'\nimport CalendarToday from '@material-ui/icons/CalendarToday'\nimport EditIcon from '@material-ui/icons/Edit'\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn'\n\nimport MyButton from '../../util/MyButton'\nimport ProfileSkeleton from '../../util/ProfileSkeleton'\n\nimport { connect } from 'react-redux'\nimport { uploadImage, logoutUser } from '../../redux/actions/userActions'\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n})\n\nclass Profile extends Component {\n  handleImageChange = event => {\n    const image = event.target.files[0]\n    // send to server\n    const formData = new FormData()\n    formData.append('image', image, image.name)\n    this.props.uploadImage(formData)\n  }\n\n  handleEditPicture = () => {\n    const fileInput = document.getElementById('imageInput')\n    fileInput.click()\n  }\n\n  handleLogout = () => {\n    this.props.logoutUser()\n  }\n\n  render() {\n    const {\n      classes,\n      user: {\n        credentials: { handle, createdAt, imageUrl, bio, website, location },\n        loading,\n        authenticated,\n      },\n    } = this.props\n\n    let ProfileMarkup = !loading ? (\n      authenticated ? (\n        <Paper elevation={2} className={classes.paper}>\n          <div className={classes.profile}>\n            <div className='image-wrapper'>\n              <img src={imageUrl} alt='profile' className='profile-image' />\n              <input\n                type='file'\n                id='imageInput'\n                hidden='hidden'\n                onChange={this.handleImageChange}\n              />\n              <MyButton\n                tip='Edit Profile Picture'\n                onClick={this.handleEditPicture}\n                btnClassName='button'\n              >\n                <EditIcon color='primary' />\n              </MyButton>\n            </div>\n            <hr />\n            <div className='profile-details'>\n              <MuiLink\n                component={Link}\n                to={`/users/${handle}`}\n                color='primary'\n                variant='h5'\n              >\n                @{handle}\n              </MuiLink>\n              <hr />\n              {bio && <Typography variant='body2'>{bio}</Typography>}\n              <hr />\n              {location && (\n                <Fragment>\n                  <LocationOn color='primary' />\n                  <span>{location}</span>\n                </Fragment>\n              )}\n              <hr />\n              {website && (\n                <Fragment>\n                  <LinkIcon color='primary' />\n                  <a href={website} target='_blank' rel='noopener noreferrer'>\n                    {''}\n                    {website}\n                  </a>\n                </Fragment>\n              )}\n              <hr />\n              <CalendarToday color='primary' />\n              <span> Joined {dayjs(createdAt).format('MMM YYYY')}</span>\n            </div>\n\n            <hr />\n            <MyButton tip='Logout' onClick={this.handleLogout}>\n              <KeyboardReturn color='primary' />\n            </MyButton>\n            <EditDetails />\n          </div>\n        </Paper>\n      ) : (\n        <Paper className={classes.paper}>\n          <Typography variant='body2' align='center'>\n            No Profile Found, Please login again\n          </Typography>\n          <div className={classes.buttons}>\n            <Button\n              variant='contained'\n              color='primary'\n              component={Link}\n              to='/login'\n            >\n              Login\n            </Button>\n            <Button\n              variant='contained'\n              color='secondary'\n              component={Link}\n              to='/signup'\n            >\n              Signup\n            </Button>\n          </div>\n        </Paper>\n      )\n    ) : (\n      <ProfileSkeleton />\n    )\n\n    return ProfileMarkup\n  }\n}\n\nProfile.propTypes = {\n  user: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  uploadImage: PropTypes.func.isRequired,\n}\n\nconst mapActionsToProps = { logoutUser, uploadImage }\n\nconst mapStateToProps = state => ({\n  user: state.user,\n})\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(Profile))\n","import React, { Fragment } from 'react'\nimport NoImg from '../images/no-image.png'\n\nimport PropTypes from 'prop-types'\n\nimport Card from '@material-ui/core/Card'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n  card: {\n    display: 'flex',\n    marginBottom: 20,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    padding: 25,\n  },\n  cover: {\n    minWidth: 200,\n    objectFit: 'cover',\n  },\n  handle: {\n    width: 60,\n    height: 18,\n    backgroundColor: theme.palette.primary.main,\n    marginBottom: 7,\n  },\n  date: {\n    width: 100,\n    height: 14,\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    marginBottom: 10,\n  },\n  fullLine: {\n    height: 15,\n    width: '90%',\n    marginBottom: 10,\n    backgroundColor: 'rgba(0,0,0,0.3)',\n  },\n  halfLine: {\n    height: 15,\n    width: '50%',\n    marginBottom: 10,\n    backgroundColor: 'rgba(0,0,0,0.3)',\n  },\n})\n\nconst ScreamSkeleton = props => {\n  const { classes } = props\n\n  const content = Array.from({ length: 5 }).map((item, index) => (\n    <Card className={classes.card} key={index}>\n      <CardMedia className={classes.cover} image={NoImg} />\n      <CardContent className={classes.content}>\n        <div className={classes.handle} />\n        <div className={classes.date} />\n        <div className={classes.fullLine} />\n        <div className={classes.fullLine} />\n        <div className={classes.halfLine} />\n      </CardContent>\n    </Card>\n  ))\n\n  return <Fragment>{content}</Fragment>\n}\n\nScreamSkeleton.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(ScreamSkeleton)\n","import React, { Component } from 'react'\nimport { Grid } from '@material-ui/core'\nimport Scream from '../components/scream/Scream.jsx'\nimport Profile from '../components/profile/Profile.jsx'\n\nimport { connect } from 'react-redux'\nimport { getScreams } from '../redux/actions/dataActions'\n\nimport PropTypes from 'prop-types'\n\nimport ScreamSkeleton from '../util/ScreamSkeleton'\n\nexport class home extends Component {\n  componentDidMount() {\n    this.props.getScreams()\n  }\n\n  render() {\n    const { screams, loading } = this.props.data\n\n    let recentScreamsMarkup = !loading ? (\n      screams.map(scream => <Scream scream={scream} key={scream.screamId} />)\n    ) : (\n      <ScreamSkeleton />\n    )\n    return (\n      <Grid container spacing={2}>\n        <Grid item sm={8} xs={12}>\n          {recentScreamsMarkup}\n        </Grid>\n        <Grid item sm={4} xs={12}>\n          <Profile></Profile>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nhome.propTypes = {\n  getScreams: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  data: state.data,\n})\n\nexport default connect(mapStateToProps, { getScreams })(home)\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport dayjs from 'dayjs'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nimport MuiLink from '@material-ui/core/link'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nimport LocationOn from '@material-ui/icons/LocationOn'\nimport LinkIcon from '@material-ui/icons/Link'\nimport CalendarToday from '@material-ui/icons/CalendarToday'\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n})\n\nconst StaticProfile = props => {\n  const {\n    classes,\n    profile: { handle, createdAt, imageUrl, bio, website, location },\n  } = props\n\n  return (\n    <Paper elevation={2} className={classes.paper}>\n      <div className={classes.profile}>\n        <div className='image-wrapper'>\n          <img src={imageUrl} alt='profile' className='profile-image' />\n        </div>\n        <hr />\n        <div className='profile-details'>\n          <MuiLink\n            component={Link}\n            to={`/users/${handle}`}\n            color='primary'\n            variant='h5'\n          >\n            @{handle}\n          </MuiLink>\n          <hr />\n          {bio && <Typography variant='body2'>{bio}</Typography>}\n          <hr />\n          {location && (\n            <Fragment>\n              <LocationOn color='primary' />\n              <span>{location}</span>\n            </Fragment>\n          )}\n          <hr />\n          {website && (\n            <Fragment>\n              <LinkIcon color='primary' />\n              <a href={website} target='_blank' rel='noopener noreferrer'>\n                {''}\n                {website}\n              </a>\n            </Fragment>\n          )}\n          <hr />\n          <CalendarToday color='primary' />\n          <span> Joined {dayjs(createdAt).format('MMM YYYY')}</span>\n        </div>\n\n        <hr />\n      </div>\n    </Paper>\n  )\n}\n\nStaticProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(StaticProfile)\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport Scream from '../components/scream/Scream'\nimport Grid from '@material-ui/core/Grid'\nimport { connect } from 'react-redux'\nimport { getUserData } from '../redux/actions/dataActions'\n\nimport StaticProfile from '../components/profile/StaticProfile'\nimport ScreamSkeleton from '../util/ScreamSkeleton'\nimport ProfileSkeleton from '../util/ProfileSkeleton'\n\nclass user extends Component {\n  state = {\n    profile: null,\n    screamIdParam: null,\n  }\n\n  componentDidMount() {\n    const screamId = this.props.match.params.screamId\n    const handle = this.props.match.params.handle\n\n    if (screamId) this.setState({ screamIdParam: screamId })\n\n    this.props.getUserData(handle)\n    axios\n      .get(`/user/${handle}`)\n      .then(res => {\n        this.setState({\n          profile: res.data.user,\n        })\n      })\n      .catch(err => console.log(err))\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.match !== this.props.match) {\n      const screamId = nextProps.match.params.screamId\n      if (screamId) this.setState({ screamIdParam: screamId, openDialog: true })\n    }\n  }\n\n  render() {\n    const { screams, loading } = this.props.data\n    const { screamIdParam } = this.state\n\n    const screamsMarkup = loading ? (\n      <ScreamSkeleton />\n    ) : screams === null ? (\n      <p>No screams from this user</p>\n    ) : !screamIdParam ? (\n      screams.map(scream => <Scream key={scream.screamId} scream={scream} />)\n    ) : (\n      screams.map(scream => {\n        if (scream.screamId !== screamIdParam)\n          return <Scream key={scream.screamId} scream={scream} />\n        else return <Scream key={scream.screamId} scream={scream} openDialog />\n      })\n    )\n\n    return (\n      <Grid container spacing={2}>\n        <Grid item sm={8} xs={12}>\n          {screamsMarkup}\n        </Grid>\n        <Grid item sm={4} xs={12}>\n          {this.state.profile === null ? (\n            <ProfileSkeleton />\n          ) : (\n            <StaticProfile profile={this.state.profile} />\n          )}\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nuser.propTypes = {\n  getUserData: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  data: state.data,\n})\n\nexport default connect(mapStateToProps, { getUserData })(user)\n","export default __webpack_public_path__ + \"static/media/icon.7aa831bd.png\";","import React, { Component } from 'react'\n// import axios from 'axios'\n\nimport TextField from '@material-ui/core/TextField'\nimport { Grid } from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types'\n\nimport AppIcon from '../images/icon.png'\n\n//redux\nimport { connect } from 'react-redux'\nimport { loginUser } from '../redux/actions/userActions'\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n})\n\nclass login extends Component {\n  constructor() {\n    super()\n    this.state = {\n      email: '',\n      password: '',\n      errors: {},\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors })\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    const userData = {\n      email: this.state.email,\n      password: this.state.password,\n    }\n    this.props.loginUser(userData, this.props.history)\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  render() {\n    const {\n      classes,\n      UI: { loading },\n    } = this.props\n    const { errors } = this.state\n\n    return (\n      <Grid container className={classes.form}>\n        <Grid item sm />\n        <Grid item sm>\n          <img src={AppIcon} alt='monkey' className={classes.image} />\n          <Typography variant='h2' className={classes.pageTitle}>\n            Login\n          </Typography>\n          <form noValidate onSubmit={this.handleSubmit}>\n            <TextField\n              id='email'\n              name='email'\n              type='email'\n              label='Email'\n              className={classes.textField}\n              helperText={errors.email}\n              error={errors.email ? true : false}\n              value={this.state.email}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <TextField\n              id='password'\n              name='password'\n              type='password'\n              label='Password'\n              className={classes.textField}\n              helperText={errors.password}\n              error={errors.password ? true : false}\n              value={this.state.password}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            {errors.general && (\n              <Typography variant='body2' className={classes.customError}>\n                {errors.general}\n              </Typography>\n            )}\n            <Button\n              type='submit'\n              variant='contained'\n              color='primary'\n              label='Submit'\n              className={classes.button}\n            >\n              {loading ? (\n                <CircularProgress className={classes.progress} size={30} />\n              ) : (\n                'Login'\n              )}\n            </Button>\n            <br />\n            <small>\n              Don't have an account? <Link to='/signup'>Sign Up</Link>\n            </small>\n          </form>\n        </Grid>\n        <Grid item sm />\n      </Grid>\n    )\n  }\n}\n\nlogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI,\n})\n\nconst mapActionsToProps = {\n  loginUser,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(login))\n","import React, { Component } from 'react'\n// import axios from 'axios'\n\nimport TextField from '@material-ui/core/TextField'\nimport { Grid } from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types'\nimport AppIcon from '../images/icon.png'\n\nimport { connect } from 'react-redux'\nimport { signupUser } from '../redux/actions/userActions'\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n})\n\nclass login extends Component {\n  constructor() {\n    super()\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      handle: '',\n      errors: {},\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({\n      loading: true,\n    })\n    const newUserData = {\n      email: this.state.email,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n      handle: this.state.handle,\n    }\n    this.props.signupUser(newUserData, this.props.history)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors })\n    }\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  render() {\n    const {\n      classes,\n      UI: { loading },\n    } = this.props\n    const { errors } = this.state\n\n    return (\n      <Grid container className={classes.form}>\n        <Grid item sm />\n        <Grid item sm>\n          <img src={AppIcon} alt='monkey' className={classes.image} />\n          <Typography variant='h2' className={classes.pageTitle}>\n            Signup\n          </Typography>\n          <form noValidate onSubmit={this.handleSubmit}>\n            <TextField\n              id='email'\n              name='email'\n              type='email'\n              label='Email'\n              className={classes.textField}\n              helperText={errors.email}\n              error={errors.email ? true : false}\n              value={this.state.email}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <TextField\n              id='password'\n              name='password'\n              type='password'\n              label='Password'\n              className={classes.textField}\n              helperText={errors.password}\n              error={errors.password ? true : false}\n              value={this.state.password}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <TextField\n              id='confirmPassword'\n              name='confirmPassword'\n              type='password'\n              label='Confirm Password'\n              className={classes.textField}\n              helperText={errors.confirmPassword}\n              error={errors.confirmPassword ? true : false}\n              value={this.state.confirmPassword}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <TextField\n              id='handle'\n              name='handle'\n              type='text'\n              label='Handle'\n              className={classes.textField}\n              helperText={errors.handle}\n              error={errors.handle ? true : false}\n              value={this.state.handle}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            {errors.general && (\n              <Typography variant='body2' className={classes.customError}>\n                {errors.general}\n              </Typography>\n            )}\n            <Button\n              type='submit'\n              variant='contained'\n              color='primary'\n              label='Submit'\n              className={classes.button}\n            >\n              {loading ? (\n                <CircularProgress className={classes.progress} size={30} />\n              ) : (\n                'Signup'\n              )}\n            </Button>\n            <br />\n            <small>\n              Already have an account? <Link to='/login'>Login</Link>\n            </small>\n          </form>\n        </Grid>\n        <Grid item sm />\n      </Grid>\n    )\n  }\n}\n\nlogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI,\n})\n\nexport default connect(mapStateToProps, { signupUser })(\n  withStyles(styles)(login)\n)\n","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CircularProgrss from '@material-ui/core/CircularProgress'\n\nimport AddIcon from '@material-ui/icons/Add'\nimport Close from '@material-ui/icons/Close'\n\nimport MyButton from '../../util/MyButton'\n\nimport { postScream, clearErrors } from '../../redux/actions/dataActions'\n\nimport { connect } from 'react-redux'\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n  submitButton: {\n    position: 'relative',\n    float: 'right',\n    marginTop: 10,\n  },\n  progressSpinner: {\n    position: 'absolute',\n  },\n  closeButton: {\n    position: 'absolute',\n    top: '6%',\n    left: '91%',\n  },\n})\n\nclass PostScream extends Component {\n  state = {\n    open: false,\n    body: '',\n    errors: {},\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors,\n      })\n    }\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({ body: '', open: false, errors: {} })\n    }\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true })\n  }\n\n  handleClose = () => {\n    this.props.clearErrors()\n    this.setState({ open: false, errors: {} })\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.postScream({ body: this.state.body })\n  }\n\n  render() {\n    const { errors } = this.state\n    const {\n      classes,\n      UI: { loading },\n    } = this.props\n\n    return (\n      <Fragment>\n        <MyButton onClick={this.handleOpen} tip='Post a Scream!'>\n          <AddIcon />\n        </MyButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth='sm'\n        >\n          <MyButton\n            tip='Close'\n            onClick={this.handleClose}\n            btnClassName={classes.closeButton}\n          >\n            <Close />\n          </MyButton>\n          <DialogTitle>Post a new scream</DialogTitle>\n          <DialogContent>\n            <form onSubmit={this.handleSubmit}>\n              <TextField\n                name='body'\n                type='text'\n                label='Scream!'\n                multiline\n                rows='3'\n                placeholder='Scream at the world'\n                error={errors.body ? true : false}\n                helperText={errors.body}\n                className={classes.TextField}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <Button\n                type='submit'\n                variant='contained'\n                color='primary'\n                className={classes.submitButton}\n                disabled={loading}\n              >\n                {loading ? (\n                  <CircularProgrss\n                    size={30}\n                    className={classes.progressSpinner}\n                  />\n                ) : (\n                  'Submit'\n                )}\n              </Button>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    )\n  }\n}\n\nPostScream.propTypes = {\n  postScream: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  UI: state.UI,\n})\n\nexport default connect(mapStateToProps, { postScream, clearErrors })(\n  withStyles(styles)(PostScream)\n)\n","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport { markNotificationsRead } from '../../redux/actions/userActions'\n\nimport PropTypes from 'prop-types'\n\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\n\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport Badge from '@material-ui/core/Badge'\n\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport ChatIcon from '@material-ui/icons/Chat'\n\nclass Notifications extends Component {\n  state = {\n    anchorEl: null,\n  }\n\n  handleOpen = event => {\n    this.setState({ anchorEl: event.target })\n  }\n\n  handleClose = () => {\n    this.setState({ anchorEl: null })\n  }\n\n  onMenuOpened = () => {\n    let unreadNotificationsIds = this.props.notifications\n      .filter(note => !note.read)\n      .map(note => note.notificationId)\n\n    this.props.markNotificationsRead(unreadNotificationsIds)\n  }\n\n  render() {\n    const notifications = this.props.notifications\n    const anchorEl = this.state.anchorEl\n\n    dayjs.extend(relativeTime)\n\n    let notificationIcon\n    if (notifications && notifications.length > 0) {\n      notifications.filter(note => note.read === false).length > 0\n        ? (notificationIcon = (\n            <Badge\n              badgeContent={\n                notifications.filter(note => note.read === false).length\n              }\n              color='secondary'\n            >\n              <NotificationsIcon />\n            </Badge>\n          ))\n        : (notificationIcon = <NotificationsIcon />)\n    } else {\n      notificationIcon = <NotificationsIcon />\n    }\n\n    let notificationsMarkup =\n      notifications && notifications.length > 0 ? (\n        notifications.map(note => {\n          // console.log(note.screamId)\n          const verb = note.type === 'like' ? 'liked' : 'commented on'\n          const time = dayjs(note.createdAt).fromNow()\n          const iconColor = note.read ? 'primary' : 'secondary'\n          const icon =\n            note.type === 'like' ? (\n              <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />\n            ) : (\n              <ChatIcon color={iconColor} style={{ marginRight: 10 }} />\n            )\n          return (\n            <MenuItem key={note.createdAt} onClick={this.handleClose}>\n              {icon}\n              <Typography\n                component={Link}\n                color='default'\n                variant='body1'\n                to={`/users/${note.recipient}/scream/${note.screamId}`}\n              >\n                {note.sender} {verb} your scream {time}\n              </Typography>\n            </MenuItem>\n          )\n        })\n      ) : (\n        <MenuItem onClick={this.handleClose}>\n          You don't have any Notifications\n        </MenuItem>\n      )\n\n    return (\n      <Fragment>\n        <Tooltip placement='top' title='Notifications'>\n          <IconButton\n            aria-owns={anchorEl ? 'simple-menu' : undefined}\n            aria-haspopup='true'\n            onClick={this.handleOpen}\n          >\n            {notificationIcon}\n          </IconButton>\n        </Tooltip>\n        <Menu\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n          onEntered={this.onMenuOpened}\n        >\n          {notificationsMarkup}\n        </Menu>\n      </Fragment>\n    )\n  }\n}\n\nNotifications.propTypes = {\n  markNotificationsRead: PropTypes.func.isRequired,\n  notifications: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  notifications: state.user.notifications,\n})\n\nexport default connect(mapStateToProps, { markNotificationsRead })(\n  Notifications\n)\n","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n// import '../../App.css'\n//MUI imports\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\n// import AppBar from '@material-ui/core/AppBar'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport HomeIcon from '@material-ui/icons/Home'\n// import NotificationsIcon from '@material-ui/icons/Notifications'\n\nimport MyButton from '../../util/MyButton'\nimport PostScream from '../scream/PostScream'\nimport Notifications from './Notifications'\n\nexport class Navbar extends Component {\n  render() {\n    const { authenticated } = this.props\n    return (\n      <AppBar>\n        <Toolbar className='nav-container'>\n          {authenticated ? (\n            <Fragment>\n              <PostScream />\n              <Link to='/'>\n                <MyButton tip='Home'>\n                  <HomeIcon />\n                </MyButton>\n              </Link>\n\n              <Notifications />\n            </Fragment>\n          ) : (\n            <Fragment>\n              <Button color='inherit' component={Link} to='/'>\n                Home\n              </Button>\n              <Button color='inherit' component={Link} to='/login'>\n                Login\n              </Button>\n              <Button color='inherit' component={Link} to='/signup'>\n                Signup\n              </Button>\n            </Fragment>\n          )}\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nNavbar.propTypes = {\n  authenticated: PropTypes.bool.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  authenticated: state.user.authenticated,\n})\n\nexport default connect(mapStateToProps)(Navbar)\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      authenticated === true ? <Redirect to='/' /> : <Component {...props} />\n    }\n  />\n)\n\nAuthRoute.propTypes = {\n  user: PropTypes.object,\n}\n\nconst mapStateToProps = state => ({\n  authenticated: state.user.authenticated,\n})\n\nexport default connect(mapStateToProps)(AuthRoute)\n","import React, { Component } from 'react'\n\n//redux\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { SET_AUTHENTICATED } from './redux/types'\nimport { logoutUser, getUserData } from './redux/actions/userActions'\n\nimport './App.css'\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles'\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\n\nimport jwtDecode from 'jwt-decode'\nimport themeFile from './util/theme'\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport home from './pages/home'\nimport user from './pages/user'\nimport login from './pages/login'\nimport signup from './pages/signup'\nimport Navbar from './components/layout/Navbar'\nimport AuthRoute from './util/AuthRoute'\nimport axios from 'axios'\n\naxios.defaults.baseURL =\n  'https://us-central1-socialapes-20bf7.cloudfunctions.net/api'\n\nconst theme = createMuiTheme(themeFile)\n\nconst token = localStorage.FBIdToken\n\nif (token) {\n  const decodedToken = jwtDecode(token)\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutUser())\n    window.location.href = '/login'\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED })\n    axios.defaults.headers.common['Authorization'] = token\n    store.dispatch(getUserData())\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <Navbar />\n            <div className='container'>\n              <Switch>\n                <Route exact path='/' component={home} />\n                <AuthRoute exact path='/login' component={login} />\n                <AuthRoute exact path='/signup' component={signup} />\n                <Route exact path='/users/:handle' component={user} />\n                <Route\n                  exact\n                  path='/users/:handle/scream/:screamId'\n                  component={user}\n                />\n              </Switch>\n            </div>\n          </Router>\n        </Provider>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}